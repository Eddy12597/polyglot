name: Build, Test, and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            main_cmd: g++ main.cpp -std=c++17 -o build/polyglot
            test_cmd: g++ test_runner.cpp -std=c++17 -o build/test-runner
          - os: macos-latest  
            main_cmd: clang++ main.cpp -std=c++17 -o build/polyglot
            test_cmd: clang++ test_runner.cpp -std=c++17 -o build/test-runner
          - os: windows-latest
            main_cmd: g++ main.cpp -std=c++17 -o build/polyglot.exe
            test_cmd: g++ test_runner.cpp -std=c++17 -o build/test-runner.exe
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pip3 install pyflakes
    
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pip3 install pyflakes
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pip install pyflakes
    
    - name: Create build directory
      run: mkdir -p build
    
    - name: Build main project
      run: ${{ matrix.main_cmd }}
    
    - name: Build test runner
      run: ${{ matrix.test_cmd }}
    
    - name: Make binaries executable
      run: chmod +x build/polyglot build/test-runner
    
    - name: Run tests from project root
      run: |
        cd "$GITHUB_WORKSPACE"
        ./build/test-runner
    
    - name: Upload main binaries as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: polyglot-${{ matrix.os }}
        path: build/polyglot
    
    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: build/polyglot
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}